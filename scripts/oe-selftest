#!/bin/sh

# scripts/oe-selftest: calls oe-selftest-internal in a isolated environment
#
# Copyright (c) 2013-2017 Intel Corporation
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License version 2 as
# published by the Free Software Foundation.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along
# with this program; if not, write to the Free Software Foundation, Inc.,
# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
#
# Description: this script can be seen as a simple wrapper for scripts/lib/oe-selftest-internal,
# however before calling the latter, it prepares the environment so that it runs
# in a separate and unique build directory. With this idea,  multiple oe-selftest can
# be launched simultaneously, reducing significantly the execution times.

# Before anything else, check oe-core environment and quit if this has not been set
if [ -z "$BUILDDIR" ]; then
    echo "Please initialize the OE-Core environment through oe-init-build-env script"
    exit 1
fi

# Variable definitions
ORIGBUILDDIR="$BUILDDIR"
OESELFTESTSCRIPTDIR="$(which oe-selftest)"
SCRIPTSDIR="$(dirname $OESELFTESTSCRIPTDIR)"
OECOREDIR="$(dirname $SCRIPTSDIR)"

# oe-selftest-$$ related
OESELFTESTDIR="$ORIGBUILDDIR/oe-selftest-$$"
OESELFTESTBUILDDIR="$OESELFTESTDIR/build"

ADDTESTS="$(echo "$@"  | egrep '\-\-run\-all\-tests|\-a')"
SOMETESTS="$(echo "$@" | egrep '\-\-run\-tests|\-r')"
SKIPTESTS="$(echo "$@" | egrep '\-\-skip\-test|\-R')"
# Run the desired non-execution command, no need to isolate the environment
if [ -z "${ADDTESTS}${SOMETESTS}${SKIPTESTS}" ]; then
    if [ -z "$@" ]; then
	$SCRIPTSDIR/lib/oe-selftest-internal -h
    else
	$SCRIPTSDIR/lib/oe-selftest-internal "$@"
    fi
    exit 0
fi

# Create isolated directories (build, build/conf and layers)
mkdir -p $OESELFTESTDIR $OESELFTESTBUILDDIR/conf $OESELFTESTLAYERSDIR

# Populate the new build/conf, bblayers.conf will be touch latter to reflect new layer structure
cp $ORIGBUILDDIR/conf/* $OESELFTESTBUILDDIR/conf

# Copy OE-Core meta directories
cp -a $OECOREDIR/meta-selftest  $OESELFTESTDIR
cp -a $OECOREDIR/meta-skeleton  $OESELFTESTDIR

# Copy non-metadata files
cp -a $OECOREDIR/bitbake        $OESELFTESTDIR
cp -a $SCRIPTSDIR               $OESELFTESTDIR
cp $OECOREDIR/oe-init-build-env $OESELFTESTDIR
cp $OECOREDIR/.templateconf     $OESELFTESTDIR
cp $OECOREDIR/README*           $OESELFTESTDIR
cp $OECOREDIR/LICENSE           $OESELFTESTDIR

# Copy all layers define in BBLAYERS and construct the new bblayers.conf at the same time
BBLAYERS="$(bitbake -e | grep ^BBLAYERS= | sed -e s/BBLAYERS=// -e s/\"//g)"
for src in $BBLAYERS; do
    cp -a $src $OESELFTESTDIR
    # rename the new layer into the new bblayers.conf
    tgt="$OESELFTESTDIR/$(basename $src)"
    sed -e "s|$src|$tgt|" -i $OESELFTESTBUILDDIR/conf/bblayers.conf
done

# respect current DL_DIR and SSTATE_DIR
for var in DL_DIR SSTATE_DIR; do
    echo  "$(bitbake -e | grep ^$var)" >> $OESELFTESTDIR/site.conf
done

# Reinitialized environment with new metadata and templateconf environement
cd $OESELFTESTDIR
. ./oe-init-build-env $OESELFTESTBUILDDIR

cat $OESELFTESTDIR/site.conf >> $OESELFTESTBUILDDIR/conf/site.conf

# Execute the tests throught oe-selftest-internal
$OESELFTESTDIR/scripts/lib/oe-selftest-internal "$@"

OESELFTESTRC="$?"

# Echo working folder
echo -e "\nAll work done under $OESELFTESTDIR\n"

exit $OESELFTESTRC
