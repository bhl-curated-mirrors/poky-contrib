#@TYPE: Machine
#@NAME: generic-arm64
#@DESCRIPTION: Generic Arm64 machine for typical SystemReady platforms, which
#have working firmware and boot via EFI.

require conf/machine/include/arm/arch-armv8a.inc

# Arm Base System Architecture says  v8.0+ is allowed, but the FEAT_CRC32
# instructions are mandatory.
DEFAULTTUNE = "armv8a-crc"

MACHINE_EXTRA_RRECOMMENDS += "kernel-modules linux-firmware"
MACHINE_FEATURES = "acpi alsa bluetooth efi keyboard pci qemu-usermode rtc screen usbhost vfat wifi"

PREFERRED_PROVIDER_virtual/kernel ?= "linux-yocto"
KERNEL_IMAGETYPE = "Image.zstd"

IMAGE_FSTYPES ?= "wic"
WKS_FILE ?= "mkefidisk.wks.in"
EFI_PROVIDER ?= "${@bb.utils.contains("DISTRO_FEATURES", "systemd", "systemd-boot", "grub-efi", d)}"

SERIAL_CONSOLES ?= "115200;ttyAMA0 115200;hvc0"

# For boot on some boards we need drivers built as modules.
# Let's put them into minimal initramfs and append it to the kernel image.
PACKAGE_INSTALL:append:pn-core-image-minimal-initramfs = " kernel-modules"
INITRAMFS_MAXSIZE:pn-core-image-minimal-initramfs ?= "262144"
INITRAMFS_IMAGE ?= "core-image-minimal-initramfs"
INITRAMFS_IMAGE_BUNDLE ?= "1"
