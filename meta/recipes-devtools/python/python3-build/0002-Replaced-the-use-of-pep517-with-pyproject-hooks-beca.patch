Upstream-Status: Submitted
Signed-off-by: Ross Burton <ross.burton@arm.com>

From 7b10b73407d70c9515f10530d8609ef468cf1f88 Mon Sep 17 00:00:00 2001
From: KOLANICH <kolan_n@mail.ru>
Date: Tue, 22 Nov 2022 18:58:03 +0300
Subject: [PATCH 2/2] Replaced the use of `pep517` with `pyproject-hooks`
 because of the rename.

---
 pyproject.toml               |  4 +--
 src/build/__init__.py        | 10 +++----
 src/build/util.py            |  4 +--
 tests/constraints.txt        |  2 +-
 tests/test_projectbuilder.py | 54 ++++++++++++++++++------------------
 5 files changed, 37 insertions(+), 37 deletions(-)

diff --git a/pyproject.toml b/pyproject.toml
index 86f801e..3fda485 100644
--- a/pyproject.toml
+++ b/pyproject.toml
@@ -33,7 +33,7 @@ urls.changelog = "https://pypa-build.readthedocs.io/en/stable/changelog.html"
 
 dependencies = [
   "packaging >= 19.0",
-  "pep517 >= 0.9.1",
+  "pyproject_hooks",
   # not actually a runtime dependency, only supplied as there is not "recommended dependency" support
   'colorama; os_name == "nt"',
   'importlib-metadata >= 0.22; python_version < "3.8"',
@@ -125,7 +125,7 @@ enable_error_code = ["ignore-without-code", "truthy-bool", "redundant-expr"]
 [[tool.mypy.overrides]]
 module = [
   "colorama",   # Optional dependency
-  "pep517.*",   # Untyped
+  "pyproject_hooks.*",   # Untyped
   "virtualenv", # Optional dependency
 ]
 ignore_missing_imports = true
diff --git a/src/build/__init__.py b/src/build/__init__.py
index 0425a85..969290c 100644
--- a/src/build/__init__.py
+++ b/src/build/__init__.py
@@ -36,7 +36,7 @@ from typing import (
     Union,
 )
 
-import pep517.wrappers
+import pyproject_hooks
 
 
 TOMLDecodeError: Type[Exception]
@@ -266,7 +266,7 @@ class ProjectBuilder:
         srcdir: PathType,
         python_executable: str = sys.executable,
         scripts_dir: Optional[str] = None,
-        runner: RunnerType = pep517.wrappers.default_subprocess_runner,
+        runner: RunnerType = pyproject_hooks.default_subprocess_runner,
     ) -> None:
         """
         :param srcdir: The source directory
@@ -305,7 +305,7 @@ class ProjectBuilder:
         self._backend = self._build_system['build-backend']
         self._scripts_dir = scripts_dir
         self._hook_runner = runner
-        self._hook = pep517.wrappers.Pep517HookCaller(
+        self._hook = pyproject_hooks.BuildBackendHookCaller(
             self.srcdir,
             self._backend,
             backend_path=self._build_system.get('backend-path'),
@@ -415,7 +415,7 @@ class ProjectBuilder:
                 _allow_fallback=False,
             )
         except BuildBackendException as exception:
-            if isinstance(exception.exception, pep517.wrappers.HookMissing):
+            if isinstance(exception.exception, pyproject_hooks.HookMissing):
                 return None
             raise
 
@@ -492,7 +492,7 @@ class ProjectBuilder:
         with _working_directory(self.srcdir):
             try:
                 yield
-            except pep517.wrappers.BackendUnavailable as exception:
+            except pyproject_hooks.BackendUnavailable as exception:
                 raise BuildBackendException(  # noqa: B904 # use raise from
                     exception,
                     f"Backend '{self._backend}' is not available.",
diff --git a/src/build/util.py b/src/build/util.py
index 6c918ce..51510fa 100644
--- a/src/build/util.py
+++ b/src/build/util.py
@@ -5,7 +5,7 @@ import pathlib
 import sys
 import tempfile
 
-import pep517
+import pyproject_hooks
 
 import build
 import build.env
@@ -41,7 +41,7 @@ def project_wheel_metadata(
     """
     builder = build.ProjectBuilder(
         os.fspath(srcdir),
-        runner=pep517.quiet_subprocess_runner,
+        runner=pyproject_hooks.quiet_subprocess_runner,
     )
 
     if not isolated:
-- 
2.34.1

