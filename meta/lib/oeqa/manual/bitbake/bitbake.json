[
  {
    "test": {
      "@alias": "BitbakeTests.BitbakeTests.test_prserv_remote_local",
      "summary": "Test PR service with remote server/local client mode capability",
      "case_status": "ACTIVE",
      "author": {
        "email": "alexandru.c.georgescu@intel.com",
        "name": "Alexandru Georgescu"
      },
      "execution_owner": {
        "email": "",
        "name": ""
      },
      "blocks": "",
      "dependson": "",
      "bugs": "5984",
      "execution": {
        "1": {
          "run": "Prepare 2 poky source trees (in 2 different locations). QA NOTE: Make sure you have check out to the target test commit hash.",
          "result": ""
        },
        "2": {
          "run": "Prepare 2 build environments from 2 different poky source tree.",
          "result": ""
        },
        "3": {
          "run": "In one of the poky source, run \"bitbake-prserv --start\". Note: Please leave the first terminal open and let PR service run.",
          "result": "PR service should start without error."
        },
        "4": {
          "run": "Switch to a new terminal and navigate to the second poky source. Source the OE build environment and set PRSERV_HOST = \"127.0.0.1:8585\" in build/conf/local.conf",
          "result": ""
        },
        "5": {
          "run": "Run \"bitbake xcursor-transparent-theme\"",
          "result": "Bitbake should compile xcursor-transparent-theme successfully without error."
        },
        "6": {
          "run": "Check the version of \"xcursor-transparent-theme\" under tmp/deploy/rpm/noarch is r0.0.",
          "result": "The version of \"xcursor-transparent-theme\" under tmp/deploy/rpm/noarch must be r0.0. Example \"xcursor-transparent-theme*-r0.0.all.rpm\""
        },
        "7": {
          "run": "Then add the following lines into xcursor-transparent-theme_${PV}.bb (/meta/recipes-graphics/xcursor-transparent-theme/xcursor-transparent-theme_git.bb) \\n do_package_append() {bb.build.exec_func('do_test_prserv', d)} \ndo_test_prserv() {echo \"Test if PR service could work\"}",
          "result": ""
        },
        "8": {
          "run": "Re-run \"bitbake xcursor-transparent-theme\"",
          "result": "Task do_packge for recipe xcursor-transparent-theme should be re-run. Bitbake should complete without error."
        },
        "9": {
          "run": "Check the xcursor-transparent-theme package built out under tmp/deploy folder",
          "result": "The PR number should bump up automatically. Example \"xcursor-transparent-theme*-r0.1.all.rpm\""
        }
      }
    }
  },
  {
    "test": {
      "@alias": "BitbakeTests.BitbakeTests.test_kernel_menuconfig",
      "summary": "Bitbake - Test bitbake can compile kernel and display menuconfig",
      "case_status": "ACTIVE",
      "author": {
        "email": "alexandru.c.georgescu@intel.com",
        "name": "Alexandru Georgescu"
      },
      "execution_owner": {
        "email": "",
        "name": ""
      },
      "blocks": "",
      "dependson": "",
      "bugs": "",
      "execution": {
        "1": {
          "run": "Clone a new poky source tree.",
          "result": ""
        },
        "2": {
          "run": "Prepare the build environment: $ cd poky && source oe-init-build-env",
          "result": ""
        },
        "3": {
          "run": "Set variable \"MACHINE\" in conf/local.conf: MACHINE = \"qemux86\"",
          "result": ""
        },
        "4": {
          "run": "Fetch kernel source tree and compute kernel configs: $ bitbake linux-yocto -c kernel_configme -f",
          "result": "Bitbake should complete without error."
        },
        "5": {
          "run": "Display kernel menuconfig: $ bitbake linux-yocto -c menuconfig",
          "result": "A menu will display if bitbake compiles the configs correctly. Mark test as failed if no menu is display."
        },
        "6": {
          "run": "Once menuconfig launched, use the interface to navigate through the selections and enable option \"64-bit kernel\"",
          "result": ""
        },
        "7": {
          "run": "Save the changes in menuconfig into a new file: test.config",
          "result": "A new config file named test.config will be generated. Please check in folder location: poky/build/tmp/work/qemux86-poky-linux/linux-yocto/4.X.X+*/linux-qemux86-standard-build/test.config"
        },
        "8": {
          "run": "Verify that the settings are in place: CONFIG_64BIT=y and CONFIG_X86_64=y",
          "result": "CONFIG_64BIT=y and CONFIG_X86_64=y should be logged in test.config."
        }
      }
    }
  },
  {
    "test": {
      "@alias": "BitbakeTests.BitbakeTests.test_alternate_download",
      "summary": "Bitbake - Test bitbake can use alternate download methods than git",
      "case_status": "ACTIVE",
      "author": {
        "email": "alexandru.c.georgescu@intel.com",
        "name": "Alexandru Georgescu"
      },
      "execution_owner": {
        "email": "",
        "name": ""
      },
      "blocks": "",
      "dependson": "",
      "bugs": "10044,10984",
      "execution": {
        "1": {
          "run": "Start by creating a fresh build directory. $ source oe-init-build-env newbuild",
          "result": ""
        },
        "2": {
          "run": "Break the proxy settings for git by issuing the following command: $ sudo chmod -x /usr/local/bin/git-proxy",
          "result": ""
        },
        "3": {
          "run": "If the proxy configuration differs, another way to do is by executing in the same shell session: GIT_PROXY_COMMAND= . Make sure that gitproxy is unset in ~/.gitconfig",
          "result": ""
        },
        "4": {
          "run": "Fetch all required packages for a core-image-sato image by issuing: $ bitbake -c fetchall core-image-sato",
          "result": "Bitbake should complete without error."
        },
        "5": {
          "run": "Once bitbake finishes, repair the git proxy settings with: sudo chmod +x /usr/local/bin/git-proxy",
          "result": ""
        },
        "6": {
          "run": "If Step 4 was followed, close the shell session and open a new one to refresh the environment.",
          "result": ""
        }
      }
    }
  },
  {
    "test": {
      "@alias": "BitbakeTests.BitbakeTests.test_devshell_display",
      "summary": "Bitbake - Test bitbake can display and enter devshell",
      "case_status": "ACTIVE",
      "author": {
        "email": "alexandru.c.georgescu@intel.com",
        "name": "Alexandru Georgescu"
      },
      "execution_owner": {
        "email": "",
        "name": ""
      },
      "blocks": "",
      "dependson": "",
      "bugs": "",
      "execution": {
        "1": {
          "run": "Clone a new poky source tree.",
          "result": ""
        },
        "2": {
          "run": "Prepare the build environment: $ cd poky && source oe-init-build-env",
          "result": ""
        },
        "3": {
          "run": "Build a recipe: $ bitbake matchbox-desktop",
          "result": "Bitbake should complete without error."
        },
        "4": {
          "run": "Command bitbake to enter devshell: $ bitbake matchbox-desktop -c devshell",
          "result": "Bitbake should complete without error. A terminal with a shell prompt within the OpenEmbedded build environment is opened."
        },
        "5": {
          "run": "Verify that \"matchbox-desktop\" binary file is not created under src/ directory.",
          "result": "No binary image is found in src/."
        },
        "6": {
          "run": "Run command to configure and build within devshell: $ ./configure && make",
          "result": "Verify that \"matchbox-desktop\" binary file was created successfully under \"src/\" directory"
        },
        "7": {
          "run": "Exit from devshell: $ exit",
          "result": "devshell should exit and show terminal back to the build directory"
        }
      }
    }
  },
  {
    "test": {
      "@alias": "BitbakeTests.BitbakeTests.test_dependency_explorer_display",
      "summary": "Bitbake - Test bitbake can display dependency explorer",
      "case_status": "ACTIVE",
      "author": {
        "email": "alexandru.c.georgescu@intel.com",
        "name": "Alexandru Georgescu"
      },
      "execution_owner": {
        "email": "",
        "name": ""
      },
      "blocks": "",
      "dependson": "",
      "bugs": "12670",
      "execution": {
        "1": {
          "run": "Clone a new poky source tree.",
          "result": ""
        },
        "2": {
          "run": "Prepare the build environment: $ cd poky && source oe-init-build-env",
          "result": ""
        },
        "3": {
          "run": "Build an image: $ bitbake core-image-full-cmdline",
          "result": "Bitbake should complete without error."
        },
        "4": {
          "run": "To execute the last command of this test, it's necessary that the machine is executing an X11 server, or if that's not the case (for example, if running the test on a headless server), it is required to enable X11 forwarding on both, the server and the client, and have the X11 server running on the client.",
          "result": ""
        },
        "5": {
          "run": "Command bitbake to display dependency explorer: $ bitbake -u taskexp -g core-image-full-cmdline",
          "result": "Bitbake should complete without error. A dependency explorer is opened and file dependencies are listed."
        }
      }
    }
  },
  {
    "test": {
      "@alias": "BitbakeTests.BitbakeTests.test_sane_error_for_invalid_layer",
      "summary": "Bitbake - Test bitbake can display error if we included an invalid meta layer.",
      "case_status": "ACTIVE",
      "author": {
        "email": "alexandru.c.georgescu@intel.com",
        "name": "Alexandru Georgescu"
      },
      "execution_owner": {
        "email": "",
        "name": ""
      },
      "blocks": "",
      "dependson": "",
      "bugs": "11834",
      "execution": {
        "1": {
          "run": "Clone a new poky source tree.",
          "result": ""
        },
        "2": {
          "run": "Prepare the build environment: $ cd poky && source oe-init-build-env",
          "result": ""
        },
        "3": {
          "run": "Add an invalid meta layer to conf/bblayers.conf: example: \"<poky_dir>/my-meta-invalid-layer\"",
          "result": ""
        },
        "4": {
          "run": "Run bitbake: $ bitbake core-image-minimal",
          "result": "Therror should be displayed: \"ERROR: Layer directory <my-meta-invalid-layer dir> does not exist! Please check BBLAYERS in <poky dir>/<build dir>/conf/bblayers.conf\""
        }
      }
    }
  },
  {
    "test": {
      "@alias": "BitbakeTests.BitbakeTests.test_bitbake_selftest",
      "summary": "Bitbake - Test bitbake can run selftest.",
      "case_status": "ACTIVE",
      "author": {
        "email": "alexandru.c.georgescu@intel.com",
        "name": "Alexandru Georgescu"
      },
      "execution_owner": {
        "email": "",
        "name": ""
      },
      "blocks": "",
      "dependson": "",
      "bugs": "11419",
      "execution": {
        "1": {
          "run": "Clone a new poky source tree.",
          "result": ""
        },
        "2": {
          "run": "Prepare the build environment: $ cd poky && source oe-init-build-env",
          "result": ""
        },
        "3": {
          "run": "Run command: $ bitbake-selftest -v",
          "result": "All test cases are executed and no errors are reported."
        }
      }
    }
  }
]
